# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Statistics(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, steps: int=None, avg_steps: int=None, kms: float=None, avg_kms: float=None, avg_activity: float=None, stats_date: datetime=None):  # noqa: E501
        """Statistics - a model defined in Swagger

        :param id: The id of this Statistics.  # noqa: E501
        :type id: int
        :param steps: The steps of this Statistics.  # noqa: E501
        :type steps: int
        :param avg_steps: The avg_steps of this Statistics.  # noqa: E501
        :type avg_steps: int
        :param kms: The kms of this Statistics.  # noqa: E501
        :type kms: float
        :param avg_kms: The avg_kms of this Statistics.  # noqa: E501
        :type avg_kms: float
        :param avg_activity: The avg_activity of this Statistics.  # noqa: E501
        :type avg_activity: float
        :param stats_date: The stats_date of this Statistics.  # noqa: E501
        :type stats_date: datetime
        """
        self.swagger_types = {
            'id': int,
            'steps': int,
            'avg_steps': int,
            'kms': float,
            'avg_kms': float,
            'avg_activity': float,
            'stats_date': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'steps': 'steps',
            'avg_steps': 'avgSteps',
            'kms': 'kms',
            'avg_kms': 'AvgKms',
            'avg_activity': 'AvgActivity',
            'stats_date': 'statsDate'
        }
        self._id = id
        self._steps = steps
        self._avg_steps = avg_steps
        self._kms = kms
        self._avg_kms = avg_kms
        self._avg_activity = avg_activity
        self._stats_date = stats_date

    @classmethod
    def from_dict(cls, dikt) -> 'Statistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Statistics of this Statistics.  # noqa: E501
        :rtype: Statistics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Statistics.


        :return: The id of this Statistics.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Statistics.


        :param id: The id of this Statistics.
        :type id: int
        """

        self._id = id

    @property
    def steps(self) -> int:
        """Gets the steps of this Statistics.


        :return: The steps of this Statistics.
        :rtype: int
        """
        return self._steps

    @steps.setter
    def steps(self, steps: int):
        """Sets the steps of this Statistics.


        :param steps: The steps of this Statistics.
        :type steps: int
        """

        self._steps = steps

    @property
    def avg_steps(self) -> int:
        """Gets the avg_steps of this Statistics.


        :return: The avg_steps of this Statistics.
        :rtype: int
        """
        return self._avg_steps

    @avg_steps.setter
    def avg_steps(self, avg_steps: int):
        """Sets the avg_steps of this Statistics.


        :param avg_steps: The avg_steps of this Statistics.
        :type avg_steps: int
        """

        self._avg_steps = avg_steps

    @property
    def kms(self) -> float:
        """Gets the kms of this Statistics.


        :return: The kms of this Statistics.
        :rtype: float
        """
        return self._kms

    @kms.setter
    def kms(self, kms: float):
        """Sets the kms of this Statistics.


        :param kms: The kms of this Statistics.
        :type kms: float
        """

        self._kms = kms

    @property
    def avg_kms(self) -> float:
        """Gets the avg_kms of this Statistics.


        :return: The avg_kms of this Statistics.
        :rtype: float
        """
        return self._avg_kms

    @avg_kms.setter
    def avg_kms(self, avg_kms: float):
        """Sets the avg_kms of this Statistics.


        :param avg_kms: The avg_kms of this Statistics.
        :type avg_kms: float
        """

        self._avg_kms = avg_kms

    @property
    def avg_activity(self) -> float:
        """Gets the avg_activity of this Statistics.


        :return: The avg_activity of this Statistics.
        :rtype: float
        """
        return self._avg_activity

    @avg_activity.setter
    def avg_activity(self, avg_activity: float):
        """Sets the avg_activity of this Statistics.


        :param avg_activity: The avg_activity of this Statistics.
        :type avg_activity: float
        """

        self._avg_activity = avg_activity

    @property
    def stats_date(self) -> datetime:
        """Gets the stats_date of this Statistics.


        :return: The stats_date of this Statistics.
        :rtype: datetime
        """
        return self._stats_date

    @stats_date.setter
    def stats_date(self, stats_date: datetime):
        """Sets the stats_date of this Statistics.


        :param stats_date: The stats_date of this Statistics.
        :type stats_date: datetime
        """

        self._stats_date = stats_date
